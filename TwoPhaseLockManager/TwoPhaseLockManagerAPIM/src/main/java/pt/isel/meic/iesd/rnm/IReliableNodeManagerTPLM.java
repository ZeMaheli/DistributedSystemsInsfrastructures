
package pt.isel.meic.iesd.rnm;

import java.util.List;
import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.FaultAction;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.2
 * Generated source version: 3.0
 * 
 */
@WebService(name = "IReliableNodeManagerTPLM", targetNamespace = "http://pt.isel.meic.iesd.rnmtplm")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface IReliableNodeManagerTPLM {


    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<pt.isel.meic.iesd.rnm.Lock>
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getLocksHeld", targetNamespace = "http://pt.isel.meic.iesd.rnmtplm", className = "pt.isel.meic.iesd.rnm.GetLocksHeld")
    @ResponseWrapper(localName = "getLocksHeldResponse", targetNamespace = "http://pt.isel.meic.iesd.rnmtplm", className = "pt.isel.meic.iesd.rnm.GetLocksHeldResponse")
    @Action(input = "http://pt.isel.meic.iesd.rnmtplm/IReliableNodeManagerTPLM/getLocksHeldRequest", output = "http://pt.isel.meic.iesd.rnmtplm/IReliableNodeManagerTPLM/getLocksHeldResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://pt.isel.meic.iesd.rnmtplm/IReliableNodeManagerTPLM/getLocksHeld/Fault/Exception")
    })
    public List<Lock> getLocksHeld(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws Exception_Exception
    ;

    /**
     * 
     * @param arg0
     * @param arg1
     * @throws Exception_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "addPendingRequest", targetNamespace = "http://pt.isel.meic.iesd.rnmtplm", className = "pt.isel.meic.iesd.rnm.AddPendingRequest")
    @ResponseWrapper(localName = "addPendingRequestResponse", targetNamespace = "http://pt.isel.meic.iesd.rnmtplm", className = "pt.isel.meic.iesd.rnm.AddPendingRequestResponse")
    @Action(input = "http://pt.isel.meic.iesd.rnmtplm/IReliableNodeManagerTPLM/addPendingRequestRequest", output = "http://pt.isel.meic.iesd.rnmtplm/IReliableNodeManagerTPLM/addPendingRequestResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://pt.isel.meic.iesd.rnmtplm/IReliableNodeManagerTPLM/addPendingRequest/Fault/Exception")
    })
    public void addPendingRequest(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        List<Lock> arg1)
        throws Exception_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<pt.isel.meic.iesd.rnm.Lock>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPendingRequest", targetNamespace = "http://pt.isel.meic.iesd.rnmtplm", className = "pt.isel.meic.iesd.rnm.GetPendingRequest")
    @ResponseWrapper(localName = "getPendingRequestResponse", targetNamespace = "http://pt.isel.meic.iesd.rnmtplm", className = "pt.isel.meic.iesd.rnm.GetPendingRequestResponse")
    @Action(input = "http://pt.isel.meic.iesd.rnmtplm/IReliableNodeManagerTPLM/getPendingRequestRequest", output = "http://pt.isel.meic.iesd.rnmtplm/IReliableNodeManagerTPLM/getPendingRequestResponse")
    public List<Lock> getPendingRequest(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @throws Exception_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "clearLocksHeld", targetNamespace = "http://pt.isel.meic.iesd.rnmtplm", className = "pt.isel.meic.iesd.rnm.ClearLocksHeld")
    @ResponseWrapper(localName = "clearLocksHeldResponse", targetNamespace = "http://pt.isel.meic.iesd.rnmtplm", className = "pt.isel.meic.iesd.rnm.ClearLocksHeldResponse")
    @Action(input = "http://pt.isel.meic.iesd.rnmtplm/IReliableNodeManagerTPLM/clearLocksHeldRequest", output = "http://pt.isel.meic.iesd.rnmtplm/IReliableNodeManagerTPLM/clearLocksHeldResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://pt.isel.meic.iesd.rnmtplm/IReliableNodeManagerTPLM/clearLocksHeld/Fault/Exception")
    })
    public void clearLocksHeld(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws Exception_Exception
    ;

    /**
     * 
     * @param arg0
     * @param arg1
     * @throws Exception_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "addLockHeld", targetNamespace = "http://pt.isel.meic.iesd.rnmtplm", className = "pt.isel.meic.iesd.rnm.AddLockHeld")
    @ResponseWrapper(localName = "addLockHeldResponse", targetNamespace = "http://pt.isel.meic.iesd.rnmtplm", className = "pt.isel.meic.iesd.rnm.AddLockHeldResponse")
    @Action(input = "http://pt.isel.meic.iesd.rnmtplm/IReliableNodeManagerTPLM/addLockHeldRequest", output = "http://pt.isel.meic.iesd.rnmtplm/IReliableNodeManagerTPLM/addLockHeldResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://pt.isel.meic.iesd.rnmtplm/IReliableNodeManagerTPLM/addLockHeld/Fault/Exception")
    })
    public void addLockHeld(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        Lock arg1)
        throws Exception_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "checkRmStatus", targetNamespace = "http://pt.isel.meic.iesd.rnmtplm", className = "pt.isel.meic.iesd.rnm.CheckRmStatus")
    @ResponseWrapper(localName = "checkRmStatusResponse", targetNamespace = "http://pt.isel.meic.iesd.rnmtplm", className = "pt.isel.meic.iesd.rnm.CheckRmStatusResponse")
    @Action(input = "http://pt.isel.meic.iesd.rnmtplm/IReliableNodeManagerTPLM/checkRmStatusRequest", output = "http://pt.isel.meic.iesd.rnmtplm/IReliableNodeManagerTPLM/checkRmStatusResponse")
    public boolean checkRmStatus(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @param arg1
     * @throws Exception_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "clearHolder", targetNamespace = "http://pt.isel.meic.iesd.rnmtplm", className = "pt.isel.meic.iesd.rnm.ClearHolder")
    @ResponseWrapper(localName = "clearHolderResponse", targetNamespace = "http://pt.isel.meic.iesd.rnmtplm", className = "pt.isel.meic.iesd.rnm.ClearHolderResponse")
    @Action(input = "http://pt.isel.meic.iesd.rnmtplm/IReliableNodeManagerTPLM/clearHolderRequest", output = "http://pt.isel.meic.iesd.rnmtplm/IReliableNodeManagerTPLM/clearHolderResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://pt.isel.meic.iesd.rnmtplm/IReliableNodeManagerTPLM/clearHolder/Fault/Exception")
    })
    public void clearHolder(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1)
        throws Exception_Exception
    ;

    /**
     * 
     * @param arg0
     * @param arg1
     * @throws Exception_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "removePendingRequest", targetNamespace = "http://pt.isel.meic.iesd.rnmtplm", className = "pt.isel.meic.iesd.rnm.RemovePendingRequest")
    @ResponseWrapper(localName = "removePendingRequestResponse", targetNamespace = "http://pt.isel.meic.iesd.rnmtplm", className = "pt.isel.meic.iesd.rnm.RemovePendingRequestResponse")
    @Action(input = "http://pt.isel.meic.iesd.rnmtplm/IReliableNodeManagerTPLM/removePendingRequestRequest", output = "http://pt.isel.meic.iesd.rnmtplm/IReliableNodeManagerTPLM/removePendingRequestResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://pt.isel.meic.iesd.rnmtplm/IReliableNodeManagerTPLM/removePendingRequest/Fault/Exception")
    })
    public void removePendingRequest(
        @WebParam(name = "arg0", targetNamespace = "")
        List<Lock> arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1)
        throws Exception_Exception
    ;

    /**
     * 
     * @param arg0
     * @param arg1
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPendingTransactions", targetNamespace = "http://pt.isel.meic.iesd.rnmtplm", className = "pt.isel.meic.iesd.rnm.GetPendingTransactions")
    @ResponseWrapper(localName = "getPendingTransactionsResponse", targetNamespace = "http://pt.isel.meic.iesd.rnmtplm", className = "pt.isel.meic.iesd.rnm.GetPendingTransactionsResponse")
    @Action(input = "http://pt.isel.meic.iesd.rnmtplm/IReliableNodeManagerTPLM/getPendingTransactionsRequest", output = "http://pt.isel.meic.iesd.rnmtplm/IReliableNodeManagerTPLM/getPendingTransactionsResponse")
    public List<String> getPendingTransactions(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1);

    /**
     * 
     * @param arg0
     * @param arg1
     * @return
     *     returns java.lang.String
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getHolder", targetNamespace = "http://pt.isel.meic.iesd.rnmtplm", className = "pt.isel.meic.iesd.rnm.GetHolder")
    @ResponseWrapper(localName = "getHolderResponse", targetNamespace = "http://pt.isel.meic.iesd.rnmtplm", className = "pt.isel.meic.iesd.rnm.GetHolderResponse")
    @Action(input = "http://pt.isel.meic.iesd.rnmtplm/IReliableNodeManagerTPLM/getHolderRequest", output = "http://pt.isel.meic.iesd.rnmtplm/IReliableNodeManagerTPLM/getHolderResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://pt.isel.meic.iesd.rnmtplm/IReliableNodeManagerTPLM/getHolder/Fault/Exception")
    })
    public String getHolder(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1)
        throws Exception_Exception
    ;

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     * @throws Exception_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "setHolder", targetNamespace = "http://pt.isel.meic.iesd.rnmtplm", className = "pt.isel.meic.iesd.rnm.SetHolder")
    @ResponseWrapper(localName = "setHolderResponse", targetNamespace = "http://pt.isel.meic.iesd.rnmtplm", className = "pt.isel.meic.iesd.rnm.SetHolderResponse")
    @Action(input = "http://pt.isel.meic.iesd.rnmtplm/IReliableNodeManagerTPLM/setHolderRequest", output = "http://pt.isel.meic.iesd.rnmtplm/IReliableNodeManagerTPLM/setHolderResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://pt.isel.meic.iesd.rnmtplm/IReliableNodeManagerTPLM/setHolder/Fault/Exception")
    })
    public void setHolder(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2)
        throws Exception_Exception
    ;

}
